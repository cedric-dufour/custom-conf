// CUSTOM-CONF: File automatically created/updated [custom-conf-firefox-esr]

// Use LANG environment variable to choose locale
// ... old way
defaultPref("intl.locale.matchOS", true);
// ... new way
defaultPref("intl.locale.requested", "");

// Identify default locale to use if no /usr/lib/firefox-addons/searchplugins/LOCALE
// exists for the current used LOCALE
defaultPref("distribution.searchplugins.defaultLocale", "en-GB");

// Prevent EULA dialog to popup on first run
lockPref("browser.EULA.override", true);

// Prevent milestone page to popup on version change
lockPref("browser.startup.homepage_override.mstone", "ignore");

// Disable default browser checking.
defaultPref("browser.shell.checkDefaultBrowser", false);

// Disable health report upload
lockPref("datareporting.healthreport.uploadEnabled", false);

// Disable all data upload (Telemetry and FHR)
lockPref("datareporting.policy.dataSubmissionEnabled", false);

// Disable crash reporter
lockPref("toolkit.crashreporter.enabled", false);

// Enable the NetworkManager integration
lockPref("toolkit.networkmanager.disable", false);

// Gecko Media Plugins (GMP) resources
var gmpService = Components.classes["@mozilla.org/gecko-media-plugin-service;1"].getService(Components.interfaces.mozIGeckoMediaPluginChromeService);

// ... disable auto-update (use' custom-pack-foobar' packages to install plugins system-wide)
lockPref("media.gmp-manager.updateEnabled", false);
lockPref("media.gmp-manager.url", "");

// ... Cisco OpenH264
gmpService.addPluginDirectory("/usr/lib/firefox-esr/gmp-gmpopenh264/custom");
lockPref("media.gmp-gmpopenh264.autoupdate", false);
lockPref("media.gmp-gmpopenh264.version", "custom");

// ... Widevine CDM (Content Decryption Module)
gmpService.addPluginDirectory("/usr/lib/firefox-esr/gmp-widevinecdm/custom");
lockPref("media.gmp-widevinecdm.autoupdate", false);
lockPref("media.gmp-widevinecdm.version", "custom");

// Let user opt-in to search suggestions
defaultPref("browser.urlbar.suggest.searches", false);

// Allow extensions update check
defaultPref("extensions.update.enabled", true);

// Default to classic view for about:newtab
defaultPref("browser.newtabpage.enhanced", false);

// Force cache management to sensible settings
lockPref("browser.cache.disk.smart_size.enabled", false);
lockPref("browser.cache.disk.smart_size.first_run", false);
lockPref("browser.cache.disk.parent_directory", "~/.cache/firefox");
lockPref("browser.cache.disk.capacity", 262144);
lockPref("browser.cache.offline.parent_directory", "~/.cache/firefox");
lockPref("browser.cache.offline.capacity", 262144);

