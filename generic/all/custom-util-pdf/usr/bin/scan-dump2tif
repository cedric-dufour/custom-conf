#!/bin/bash

# Usage
[ $# -lt 1 -o "${1##*-}" == 'help' ] && cat << EOF && exit 1
USAGE: ${0##*/} [<options>] <output.tif> [-- <scanimage-options>]

SYNOPSIS:
  Scans (multiple) page(s) from scanner (optionally specified by device ID) to TIF file.

OPTIONS:
  -P --pages       Page quantity                    [1]
  -M --mode        Color mode {Lineart|Gray|Color}  [Lineart]
  -R --resolution  Resolution (DPI)                 [300]
  -X --width       Scan width (mm)                  [210]
  -Y --height      Scan height (mm)                 [297]
EOF

# Arguments
MY_FILE=
MY_PAGES='1'
MY_MODE='Lineart'
MY_RESOLUTION='300'
MY_WIDTH='210'
MY_HEIGHT='297'
EXT_OPTIONS=
while [ -n "${1}" ]; do
  case "${1}" in
    -P|--pages) shift; MY_PAGES=$(( 0 + ${1} )) ;;
    -M|--mode) shift; MY_MODE="${1}" ;;
    -R|--resolution) shift; MY_RESOLUTION=$(( 0 + ${1} )) ;;
    -X|--width) shift; MY_WIDTH=$(( 0 + ${1} )) ;;
    -Y|--height) shift; MY_HEIGHT=$(( 0 + ${1} )) ;;
    --format|-x|-y) shift ;;
    --) EXT_OPTIONS=' ' ;;
    *) if [ -z "${EXT_OPTIONS}" ]; then MY_FILE="${1}"; else EXT_OPTIONS="${EXT_OPTIONS} ${1}"; fi ;;
  esac
  shift
done

# Parameters
MY_FILETMP="${TMP:-/tmp}/${0##*/}.$$"
MY_COMPRESSION=
case "${MY_MODE}" in
  'lineart'|'Lineart'|'LineArt') MY_COMPRESSION='g4' ;;
  'gray'|'Gray') MY_COMPRESSION='lzw' ;;
  'color'|'Color') MY_COMPRESSION='jpeg -r 64' ;;
esac

# Check arguments
[ -z "${MY_FILE}" ] && echo 'ERROR: Missing file argument' >&2 && exit 1
[ ${MY_PAGES} -lt 1 ] && echo "ERROR: Invalid pages quantity (${MY_PAGES})" >&2 && exit 1
[ ${MY_RESOLUTION} -lt 75 ] && echo "ERROR: Invalid resolution (${MY_RESOLUTION})" >&2 && exit 1
[ ${MY_WIDTH} -lt 10 ] && echo "ERROR: Invalid width (${MY_WIDTH})" >&2 && exit 1
[ ${MY_HEIGHT} -lt 10 ] && echo "ERROR: Invalid height (${MY_HEIGHT})" >&2 && exit 1
[ -z "${MY_COMPRESSION}" ] && echo "ERROR: Invalid color mode (${MY_MODE})" >&2 && exit 1

# Check dependencies
[ -z "$(which scanimage)" ] && echo "ERROR: 'scanimage' was not found" >&2 && exit 1
[ -z "$(which tiffcp)" ] && echo "ERROR: 'tiffcp' was not found" >&2 && exit 1

# Trap
trap "rm -f '${MY_FILETMP}'.*.tif" EXIT

# Scan image
for (( p=0; p<${MY_PAGES}; p=p+1 )); do
  let d=p+1
  P="000${p}"; P=${P:${#P}-3} # PS: ${parameter:-offset} doest not work...
  echo -n "Place document/page N°${d} in scanner and press <ENTER> (or <CTRL-C> to abort)" && read
  echo "Scanning document/page N°${d}..."
  touch "${MY_FILETMP}.${P}.tif" && chmod 600 "${MY_FILETMP}.${P}.tif"
  scanimage --progress --mode ${MY_MODE} -x ${MY_WIDTH} -y ${MY_HEIGHT} --resolution ${MY_RESOLUTION} --format tiff ${EXT_OPTIONS} > "${MY_FILETMP}.${P}.tif"
  [ $? -ne 0 ] && echo 'ERROR: Failed to scan image' >&2 && exit 1
done

# Create TIF
tiffcp -c ${MY_COMPRESSION} "${MY_FILETMP}".*.tif "${MY_FILE}"
[ $? -ne 0 ] && echo 'ERROR: Failed to create document' >&2 && exit 1
echo "Document(s)/page(s) successfully scanned to: ${MY_FILE}"

# Done
exit 0

