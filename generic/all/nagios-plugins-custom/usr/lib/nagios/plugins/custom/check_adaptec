#!/bin/bash
## File automatically created/updated [nagios-plugins-custom]
# EXIT: 0 = OK; 1 = WARNING; 2 = CRITITCAL; 3 = UNKNOWN (ERROR)
# ECHO: <human-friendly status message> |<performance_data>

# Usage
[ $# -lt 1 -o "${1##*-}" == 'help' ] && cat << EOF && exit 3
USAGE: ${0##*/} <controller #> [<force-task-poll>]
SYNOPSIS: Nagios-compliant command to check Adaptec controller status
REQUIRED: storman (check: arcconf --help)
PERMISSIONS: arcconf MUST be executed by root (sudo) to succeed
EOF

# Parameters
UCLI_CONTROLLER=$1
UCLI_TASKPOLL=$2
UCLI_COMMAND='sudo /usr/sbin/arcconf'

# Check command
which "${UCLI_COMMAND#* }" >/dev/null
[ $? -ne 0 ] && echo 'ERROR: Missing controller status monitoring utility (arcconf)' && exit 3

# Controller status
UCLI_OUTPUT="$(${UCLI_COMMAND} GETCONFIG ${UCLI_CONTROLLER} AD)"
UCLI_EXIT=$?
[ ${UCLI_EXIT} -ne 0 ] && echo "ERROR: Failed to retrieve controller status; Exit code: ${UCLI_EXIT}" && exit 3
UCLI_AD="$(echo "${UCLI_OUTPUT}" | egrep -i 'controller status' | sed "s/[^:]*: */AD#${UCLI_CONTROLLER},/")"

# Check
UCLI_OUTPUT="$(${UCLI_COMMAND} GETCONFIG ${UCLI_CONTROLLER} LD)"
UCLI_LD="$(echo "${UCLI_OUTPUT}" | egrep -i '(device number|device name|status)' | tr '\n' '$' | sed 's/\$ [^:]*: */\$/g;s/\(^\|\$\)[^\$]*device number */\1LD#/g;s/\([^\$]*\$[^\$]*\$[^\$]*\)\$/\1\n/g;s/\$/,/g' | sort)"
UCLI_STATUS=0
IFS=$'\n'; for r in ${UCLI_AD} ${UCLI_LD}; do
  [ -n "$(echo ${r} | fgrep -i ',optimal')" ] && continue
  [ -z "$(echo ${r} | fgrep -i ',impacted')" ] && UCLI_STATUS=2 && break
  UCLI_STATUS=1
done
unset IFS
if [ -n "${UCLI_TASKPOLL}" -o ${UCLI_STATUS} -ne 0 ]; then
  UCLI_TASK="$(${UCLI_COMMAND} GETSTATUS ${UCLI_CONTROLLER} | egrep -i '(logical device|current operation|percentage complete) *:' | tr '\n' '$' | sed 's/\(^\|\$\) [^:]*: */\1LD#/g;s/\([^\$]*\$[^\$]*\$[^\$]*\)\$/\1\n/g;s/\$/,/g' | sort)"
  UCLI_LD=$(join -t ',' -a 1 <(echo "${UCLI_LD}") <(echo "${UCLI_TASK}"))
fi
UCLI_DATA="$(echo "${UCLI_AD};${UCLI_LD}" | tr '\n' ';' | sed 's/[,;]$//')"
[ ${UCLI_STATUS} -eq 2 ] && echo "CRITICAL: Controller status is CRITICAL |${UCLI_DATA}" && exit 2
[ ${UCLI_STATUS} -eq 1 ] && echo "WARNING: Controller status is WARNING |${UCLI_DATA}" && exit 1
echo "OK: Controller status is OK |${UCLI_DATA}"

