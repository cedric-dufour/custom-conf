## CUSTOM-CONF: File automatically created/updated [custom-conf-opensc]

## OpenSC Configuration

# Default values for any application
app default {
  # Disable swap memory usage
  paranoid_memory = true;

  # Let apps manage user interaction on their own
  disable_popups = true;

  # Readers
  # ... PC/SC
  reader_driver pcsc {
    # Disable pinpad (required by PKCS#11 'atomic = true'; see below)
    enable_pinpad = false;
  }

  # Cards
  # ... nPA
  card_driver npa {
    #can = 42;
  }

  # Cards quirks
  # ... YubiKey
  card_atr 3b:f8:13:00:00:81:31:fe:15:59:75:62:69:6b:65:79:34:d4 {
    name = "YubiKey 4 (PIV)";
    driver = "PIV-II";
    flags = "keep_alive";
  }
  card_atr 3b:fc:13:00:00:81:31:fe:15:59:75:62:69:6b:65:79:4e:45:4f:72:33:e1 {
    name = "YubiKey Neo (PIV)";
    driver = "PIV-II";
    flags = "keep_alive";
  }
  card_atr 3b:8c:80:01:59:75:62:69:6b:65:79:4e:45:4f:72:33:58 {
    atrmask = "FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:00:00";
    name = "YubiKey Neo (PIV)";
    driver = "PIV-II";
    flags = "keep_alive";
  }
  card_atr 3b:fd:13:00:00:81:31:fe:15:80:73:c0:21:c0:57:59:75:62:69:4b:65:79:40 {
    name = "YubiKey 5 (PIV)";
    driver = "PIV-II";
    flags = "keep_alive";
  }
  # ... Micardo
  card_atr 3b:ff:94:00:ff:80:b1:fe:45:1f:03:00:68:d2:76:00:00:28:ff:05:1e:31:80:00:90:00:23 {
    force_protocol = t0;
  }
  card_atr 3b:ff:11:00:ff:80:b1:fe:45:1f:03:00:68:d2:76:00:00:28:ff:05:1e:31:80:00:90:00:a6 {
    force_protocol = t0;
  }
  # ... Oberthur's AuthentIC
  card_atr 3B:DD:18:00:81:31:FE:45:80:F9:A0:00:00:00:77:01:00:70:0A:90:00:8B {
    type = 11100;
    driver = "authentic";
    name = "AuthentIC v3.1";
  }
  # ... IAS/ECC
  card_atr 3B:7F:96:00:00:00:31:B9:64:40:70:14:10:73:94:01:80:82:90:00 {
    type = 25001;
    driver = "iasecc";
    name = "Gemalto MultiApp IAS/ECC v1.0.1";
    secure_messaging = local_gemalto_iam;
    md_read_only = false;
    md_supports_X509_enrollment = true;
  }
  card_atr 3B:7F:96:00:00:00:31:B8:64:40:70:14:10:73:94:01:80:82:90:00 {
    type = 25001;
    driver = "iasecc";
    name = "Gemalto MultiApp IAS/ECC v1.0.1";
    secure_messaging = local_gemalto_iam;
    md_read_only = false;
    md_supports_X509_enrollment = true;
  }
  card_atr 3B:DF:18:FF:81:91:FE:1F:C3:00:31:B8:64:0C:01:EC:C1:73:94:01:80:82:90:00:B3 {
    type = 25004;
    driver = "iasecc";
    name = "Amos IAS/ECC v1.0.1";
    md_read_only = false;
    md_supports_X509_enrollment = true;
    secure_messaging = local_amos;
  }
  card_atr 3B:DC:18:FF:81:91:FE:1F:C3:80:73:C8:21:13:66:01:0B:03:52:00:05:38 {
    type = 25004;
    driver = "iasecc";
    name = "Amos IAS/ECC v1.0.1";
    md_read_only = false;
    md_supports_X509_enrollment = true;
    secure_messaging = local_amos_eid;
  }
  # ... SmartCard-HSM
  card_atr 3B:FE:18:00:00:81:31:FE:45:80:31:81:54:48:53:4D:31:73:80:21:40:81:07:FA {
    driver = "sc-hsm";
    md_read_only = false;
    md_supports_X509_enrollment = true;
    md_supports_container_key_gen = true;
    md_guid_as_label = true;
  }
  card_atr 3B:8E:80:01:80:31:81:54:48:53:4D:31:73:80:21:40:81:07:18 {
    driver = "sc-hsm";
    md_read_only = false;
    md_supports_X509_enrollment = true;
    md_supports_container_key_gen = true;
    md_guid_as_label = true;
  }

  # Secure Messaging (SM) interfaces
  # ... default
  secure_messaging local_authentic {
    module_path = /usr/lib/x86_64-linux-gnu;
  }
  # ... Gemalto
  secure_messaging local_gemalto_iam  {
    module_name = libsmm-local.so;
    module_path = /usr/lib/x86_64-linux-gnu;
    type = acl;
    ifd_serial = "11:22:33:44:55:66:77:88";
    keyset_02_enc = "RW_PRIV_ENC_TEST";
    keyset_02_mac = "RW_PRIV_MAC_TEST";
    keyset_E828BD080FD2504543432D654944_01_enc = "RO_ENC_TEST_KEY_";
    keyset_E828BD080FD2504543432D654944_01_mac = "RO_MAC_TEST_KEY_";
    keyset_E828BD080FD2504543432D654944_03_enc = "RW_PUBL_ENC_TEST";
    keyset_E828BD080FD2504543432D654944_03_mac = "RW_PUBL_MAC_TEST";
  }
  # ... AMMI's AMOS
  secure_messaging local_amos  {
    module_name = libsmm-local.so;
    module_path = /usr/lib/x86_64-linux-gnu;
    mode = acl;
    ifd_serial = "11:22:33:44:55:66:77:88";
    keyset_02_enc = "ENCROECHANTILLON";
    keyset_02_mac = "MACROECHANTILLON";
  }
  secure_messaging local_amos_eid  {
    module_name = libsmm-local.so;
    module_path = /usr/lib/x86_64-linux-gnu;
    mode = acl;
    ifd_serial = "11:22:33:44:55:66:77:88";
    keyset_E828BD080FD2504543432D654944_03_enc = "RW_PUBL_ENC_TEST";
    keyset_E828BD080FD2504543432D654944_03_mac = "RW_PUBL_MAC_TEST";
  }
  # ... Adele
  secure_messaging local_adele  {
    module_name = libsmm-local.so;
    module_path = /usr/lib/x86_64-linux-gnu;
    type = acl;
    ifd_serial = "11:22:33:44:55:66:77:88";
    keyset_01_enc = "EMENCECHANTILLON";
    keyset_01_mac = "EMMACECHANTILLON";
    keyset_02_enc = "AAENCECHANTILLON";
    keyset_02_mac = "AAMACECHANTILLON";
    keyset_E828BD080FD2500000040301_02_enc = "E2ENCECHANTILLON";
    keyset_E828BD080FD2500000040301_02_mac = "E2MACECHANTILLON";
    keyset_D2500000044164E86C650101_02_enc = "E1ENCECHANTILLON";
    keyset_D2500000044164E86C650101_02_mac = "E1MACECHANTILLON";
    keyset_D2500000044164E86C650101_03_enc = "SIENCECHANTILLON";
    keyset_D2500000044164E86C650101_03_mac = "SIMACECHANTILLON";
  }

  # Frameworks
  # ... PKCS #15
  framework pkcs15 {
    # Make sure NOT to use cache files
    use_file_caching = false;

    # PIN caching
    #use_pin_caching = true;
    #pin_cache_counter = 10;

    # Quirks
    application E828BD080FD25047656E65726963 {
      type = generic;
      model = "ECC Generic PKI";
    }
    application E828BD080FD2500000040301 {
      type = generic;
      model = "Adèle Générique";
    }
    application E828BD080FD2504543432D654944 {
      type = protected;
      model = "ECC eID";
    }
    application E828BD080FD2500000040201 {
      type = protected;
      model = "Adèle Admin-2";
    }
  }
}

# OpenSC PKCS11 module configuration
# ... multiple PINs/slots
app opensc-pkcs11 {
  pkcs11 {
    # Lock card once logged-in (implied by 'atomic = true')
    lock_login = true;

    # Atomic (stateful) transactions
    atomic = true;

    # Make sure PIN unblocking is achieved with proper tool (not via PKCS#11)
    user_pin_unblock_style = none;
  }
}
# ... single PIN/slot "enforcement"
app onepin-opensc-pkcs11 {
  pkcs11 {
    slots_per_card = 1;
  }
}

