#!/bin/bash
## CUSTOM-CONF: File automatically created/updated [custom-conf-utils]


## Usage
[ $# -lt 1 -o "${1##*-}" == 'help' ] && cat << EOF && exit 1
USAGE: ${0##*/} <ip-address>[/<cidr>]

SYNOPSIS:
  Retrieve the network interface (name) that allows to reach:
   the given network segment (recommended fail-safe method)
  or
   the given IP address (which must exist in the neighbor table)
EOF

# Arguments
NETADDR="${1}"


## Retrieve interface name
IFACE=
if [ -n "$(echo ${NETADDR} | egrep '^[0-9]{1,3}(\.[0-9]{1,3}){3}(/[0-9]{1,2})?$')" ]; then
  # IPv4
  if [[ ${NETADDR} == *'/'* ]]; then
    # network segment
    IFACE="$(ip -4 addr show to ${NETADDR} | egrep -i '^[0-9]+: [0-9a-z]+: ' | awk -F': ' '{print $2}')"
  else
    # IP address
    IFACE="$(ping -q -n -c1 ${NETADDR} >/dev/null 2>&1 && ip -4 neigh show to ${NETADDR} | awk '{print $3}')"
  fi
elif [ -n "$(echo ${NETADDR} | egrep -i '^[0-9a-f]{0,4}(:[0-9a-f]{0,4}){1,7}(/[0-9]{2,3})?$')" ]; then
  # IPv6
  if [[ ${NETADDR} == *'/'* ]]; then
    # network segment
    IFACE="$(ip -6 addr show to ${NETADDR} | egrep -i '^[0-9]+: [0-9a-z]+: ' | awk -F': ' '{print $2}')"
  else
    # IP address
    IFACE="$(ping6 -q -n -c1 ${NETADDR} >/dev/null 2>&1 && ip -6 neigh show to ${NETADDR} | awk '{print $3}')"
  fi
else
  echo "ERROR: Invalid IP address (${NETADDR})" >&2 && exit 1
fi
[ -z "${IFACE}" ] && echo "ERROR: Failed to retrieve interface for given IP address (${NETADDR})" >&2 && exit 1


## Done
echo "${IFACE}"
exit 0

