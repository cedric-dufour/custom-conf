#!/bin/bash


## Usage
[ "${1##*-}" == 'help' ] && cat << EOF && exit 1
USAGE: ${0##*/} [<options>] [<title>[:<chapter-start>[-<chapter-end>]]=1:1-end]

SYNOPSIS:
  Transcode the given DVD AC3/DTS stream to SPDIF-encoded WAV files.
  The resulting WAV files can then be burned to CD (AC3/DTS CD) or
  played via any HDMI/SPDIF pass-through player.

OPTIONS:
  -D, --device <path> [default:/dev/dvd]
      DVD device path (actual device, ISO file or VOBs directory)

  -O, --output <path> [default:./dvd]
      Transcoded content output path

  -a, --audio-id <integer> [default:none]
      Audio track(s) ID(s)

  -k, --keep-aux-files
      Do not remove auxiliary transconding files

  -v, --verbose
      Show all error messages

AUTHOR:
  CÃ©dric Dufour - http://cedric.dufour.name
EOF


## Arguments
DVD_TITLE=
DVD_DEVICE='/dev/dvd'
DVD_OUTPUT='./dvd'
DVD_AIDS=
DVD_KEEPAUXFILES=
DVD_STDERR='2>/dev/null'
ARGS_SEP=
MENCODER_OPTS=
while [ -n "${1}" ]; do
  case "${1}" in
    --) ARGS_SEP='yes';;
    -D|--device) shift; [ -z "${1}" ] && echo 'ERROR: Missing option value (--device)' >&2 && exit 1; DVD_DEVICE="${1}";;
    -O|--output) shift; [ -z "${1}" ] && echo 'ERROR: Missing option value (--output)' >&2 && exit 1; DVD_OUTPUT="${1}";;
    -a|--audio-id) shift; [ -z "${1}" ] && echo 'ERROR: Missing option value (--audio-id)' >&2 && exit 1; DVD_AIDS="${DVD_AIDS:+ }${DVD_AIDS}${1}";;
    -k|--keep-aux-files) DVD_KEEPAUXFILES='yes';;
    -v|--verbose) DVD_STDERR='';;
    -*)
      if [ -n "${ARGS_SEP}" ]; then
        MENCODER_OPTS="${MENCODER_OPTS:+ }${MENCODER_OPTS}${1}"
      else
        echo "ERROR: Invalid option (${1})" >&2 && exit 1
      fi
      ;;
    *)
      if [ -n "${ARGS_SEP}" ]; then
        MENCODER_OPTS="${MENCODER_OPTS:+ }${MENCODER_OPTS}${1}"
      elif [ -z "${DVD_TITLE}" ]; then
        DVD_TITLE="${1}"
      else
        echo "ERROR: Too many arguments (${1})" >&2 && exit 1
      fi
      ;;
  esac
  shift
done
[ -z "${DVD_TITLE}" ] && DVD_TITLE='1:'
DVD_CHAPTER="${DVD_TITLE#*:}"
DVD_TITLE="${DVD_TITLE%:*}"
[ -z "${DVD_CHAPTER}" ] && DVD_CHAPTER='1-end'
DVD_OUTDIR="$(dirname "${DVD_OUTPUT}")"
DVD_OUTFILE="${DVD_OUTDIR}/$(basename "${DVD_OUTPUT}")"


## Check dependencies
[ ! "$(which mplayer)" ] && echo "ERROR: Missing 'mplayer' binary" >&2 && exit 1
[ ! "$(which mencoder)" ] && echo "ERROR: Missing 'mencoder' binary" >&2 && exit 1
DVD_FFMPEG='ffmpeg'
[ ! "$(which ${DVD_FFMPEG})" ] && DVD_FFMPEG='avconv'
[ ! "$(which ${DVD_FFMPEG})" ] && echo "ERROR: Missing 'ffmpeg' (or 'avconv') binary" >&2 && exit 1


## Check arguments
[ ! -r "${DVD_DEVICE}" ] && echo "ERROR: Invalid/unreadable DVD device ('${DVD_DEVICE}')" >&2 && exit 1
[ ! -w "${DVD_OUTDIR}" ] && echo "ERROR: Invalid/unwritable output directory ('${DVD_OUTDIR}')" >&2 && exit 1


## Transcode DVD
DVD_OUTFILE_CURRENT=
trap '[ -n "${DVD_OUTFILE_CURRENT}" ] && rm -v "${DVD_OUTFILE_CURRENT}"' EXIT

# Configure environment
export MPLAYER_VERSOSE=2

# Retrieve DVD info
DVD_INFO="$(mplayer-dvdinfo -D "${DVD_DEVICE}" ${DVD_TITLE}:${DVD_CHAPTER} 2>/dev/null)"
DVD_CHAPTER_COUNT="$(echo "${DVD_INFO}" | grep 'CHAPTERS:' | sed 's|^.*CHAPTERS: *||;s|,*$||' | tr ',' '\n' | tail -n +2 | wc -l)"
DVD_CHAPTER="${DVD_CHAPTER//end/${DVD_CHAPTER_COUNT}}"

# Rip audio tracks
if [ -n "${DVD_AIDS}" ]; then
  echo '********************************************************************************'
  echo 'Ripping audio tracks'
  for aid in ${DVD_AIDS}; do
    echo '................................................................................'
    lang=$(echo "${DVD_INFO}" | fgrep " aid: ${aid}." | sed 's|^.*language: \([^ ]*\).*$|\1|')
    [ -z "${lang}" -o "${lang}" == 'unknown' ] && echo "WARNING: Language for audio track is undetermined (aid=${aid})" >&2 && lang='und'
    for chapter in $(seq ${DVD_CHAPTER%-*} ${DVD_CHAPTER#*-}); do
      chapter_padded="000${chapter}"; chapter_padded="${chapter_padded:${#chapter_padded}-3:3}"
      DVD_OUTFILE_CURRENT="${DVD_OUTFILE}.A-${aid}-${lang}.${chapter_padded}.spdif.wav"
      echo "Ripping audio track ('${DVD_OUTFILE_CURRENT}')"
      if [ -e "${DVD_OUTFILE_CURRENT}" ]; then
        echo "File already exists ('${DVD_OUTFILE_CURRENT}'); Skipping!"
        continue
      fi
      DVD_OUTFILE_CURRENT="${DVD_OUTFILE}.A-${aid}-${lang}.${chapter_padded}.avi"
      if [ -e "${DVD_OUTFILE_CURRENT}" ]; then
        echo "File already exists ('${DVD_OUTFILE_CURRENT}'); Skipping!"
      else
        eval "mencoder -dvd-device '${DVD_DEVICE}' dvd://${DVD_TITLE} -chapter ${chapter}-${chapter} -aid ${aid} -oac copy -ovc frameno -o '${DVD_OUTFILE_CURRENT}' ${MENCODER_OPTS} ${DVD_STDERR}" || exit 1
      fi
      DVD_OUTFILE_PREVIOUS="${DVD_OUTFILE_CURRENT}"
      DVD_OUTFILE_CURRENT="${DVD_OUTFILE}.A-${aid}-${lang}.${chapter_padded}.spdif"
      if [ -e "${DVD_OUTFILE_CURRENT}" ]; then
        echo "File already exists ('${DVD_OUTFILE_CURRENT}'); Skipping!"
      else
        eval "${DVD_FFMPEG} -i '${DVD_OUTFILE_PREVIOUS}' -acodec copy '${DVD_OUTFILE_CURRENT}'" || exit 1
      fi
      DVD_OUTFILE_PREVIOUS="${DVD_OUTFILE_CURRENT}"
      DVD_OUTFILE_CURRENT="${DVD_OUTFILE}.A-${aid}-${lang}.${chapter_padded}.spdif.wav"
      eval "${DVD_FFMPEG} -f s16le -ac 2 -ar 44100 -i '${DVD_OUTFILE_PREVIOUS}' -acodec copy '${DVD_OUTFILE_CURRENT}'" || exit 1
    done
  done
fi
DVD_OUTFILE_CURRENT=

# Finish
[ -z "${DVD_KEEPAUXFILES}" ] && rm -f divx2pass* "${DVD_OUTFILE}"*.{avi,spdif}


## Done
exit 0

